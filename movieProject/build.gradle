plugins {
  id 'java'
  id 'war'
}

group 'com.movie'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')

  // jsp gradle ////////////
  // https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api
  compileOnly group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.3'
  ////////////////////////////////////////////////////////////

  // file_upload gradle //////////
  // https://mvnrepository.com/artifact/com.jfinal/cos
  implementation group: 'com.jfinal', name: 'cos', version: '2022.2'
  // https://mvnrepository.com/artifact/commons-io/commons-io
  implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
  // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
  implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
  ///////////////////////////////////////////////////////////////////


  // jstl gradle ////////////

  // https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/javax.servlet.jsp.jstl-api
  compileOnly group: 'javax.servlet.jsp.jstl', name: 'javax.servlet.jsp.jstl-api', version: '1.2.2'
  // https://mvnrepository.com/artifact/org.glassfish.web/javax.servlet.jsp.jstl
  implementation group: 'org.glassfish.web', name: 'javax.servlet.jsp.jstl', version: '1.2.5'
  ////////////////////////////////////////////////////////////////////

  // mysql 연결
  // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
  implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.33'
  ////////////////////////////////////////////////////
// https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
  // https://mvnrepository.com/artifact/org.glassfish.main/javax.annotation
  implementation 'org.glassfish.main:javax.annotation:4.0-b33'

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
  useJUnitPlatform()  }